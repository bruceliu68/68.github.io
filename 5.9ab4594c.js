(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{102:function(n,e,t){"use strict";var a=t(5),r=t.n(a),i=t(6),o=t.n(i),u=t(7),l=t.n(u),s=t(8),c=t.n(s),m=t(9),d=t.n(m),h=t(0),p=t.n(h),f=t(143),v=t.n(f),y=t(144),g=t.n(y),b=(t(55),t(56),function(n){function e(){var n;return r()(this,e),n=l()(this,c()(e).call(this)),v.a.setOptions({renderer:new v.a.Renderer,highlight:function(n){return g.a.highlightAuto(n).value},baseUrl:null,breaks:!1,gfm:!0,tables:!0,headerIds:!0,headerPrefix:"",langPrefix:"language-",mangle:!0,pedantic:!1,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,xhtml:!1}),n}return d()(e,n),o()(e,[{key:"render",value:function(){var n=this.props.source,e=void 0===n?"":n;return p.a.createElement("div",{className:"m-markdown-render markdown-body",dangerouslySetInnerHTML:{__html:v()(e||"")}})}}]),e}(h.PureComponent));e.a=b},79:function(n,e,t){"use strict";t.r(e);var a=t(5),r=t.n(a),i=t(6),o=t.n(i),u=t(7),l=t.n(u),s=t(8),c=t.n(s),m=t(9),d=t.n(m),h=(t(60),t(0)),p=t.n(h),f=(t(61),t(19)),v=function(n){function e(){return r()(this,e),l()(this,c()(e).apply(this,arguments))}return d()(e,n),o()(e,[{key:"componentDidMount",value:function(){var n=this.props,e=n.menuList,t=n.name,a=e.findIndex(function(n){if(n.url===t)return!0});!a&&0!==a||dispatch({type:"component/changeState",payload:{sideMenuActive:a}})}},{key:"clickItem",value:function(n,e){var t=this.props.history;dispatch({type:"component/changeState",payload:{sideMenuActive:e}}),t.push("/component/".concat(n.url))}},{key:"render",value:function(){var t=this,n=this.props,e=n.menuList,a=n.componentState.sideMenuActive;return p.a.createElement("div",{className:"m-side-menu"},p.a.createElement("div",{className:"title"},"简介"),p.a.createElement("ul",null,e.map(function(n,e){return p.a.createElement("li",{key:e,className:a===e?"active":null,onClick:function(){return t.clickItem(n,e)}},n.name)})))}}]),e}(h.PureComponent),y=Object(f.b)(function(n){return{componentState:n.component}})(v),g=t(102),b=function(n){function e(){return r()(this,e),l()(this,c()(e).apply(this,arguments))}return d()(e,n),o()(e,[{key:"render",value:function(){return p.a.createElement("div",{className:"m-main"},p.a.createElement(g.a,{source:"> ## TDS Components of React\n\n- 欢迎来到我的个人组件库，目前所有组件基于react开发。\n\n- 本人秉承不重复造轮子的原则，只造市面上没有的或者不好用的轮子。\n\n- 没有完美的轮子，所以我们的轮子均开源，开发者可以访问GitHub下载源码，根据自己的个性化需求进行深度加工。\n\n> 最后，非常感谢您的到来，同时也希望您在GitHub上多多提意见，让我们变得更好！"}))}}]),e}(h.PureComponent),k=function(n){function e(){return r()(this,e),l()(this,c()(e).apply(this,arguments))}return d()(e,n),o()(e,[{key:"render",value:function(){return p.a.createElement("div",{className:"m-main"},p.a.createElement(g.a,{source:'# formula-edit-react\n\n> 计算公式编辑器\n\n- 支持@变量和#方法，并支持智能提示\n- 支持主题切换\n- 支持行数显示、只读模式\n- 支持代码高亮\n- 支持代码错误提示\n\n## Usage\n\n### formula-edit-react\n\n安装\n\n```sh\nnpm install --save-dev formula-edit-react\n```\n使用\n\n```\n<FormulaEdit\n    theme="day" // 主题\n    height={200} // 高度\n    defaultValue={defaultCode} // 初始化值\n    fieldList={fieldList} // @唤起\n    methodList={methodList} // #唤起\n    normalList={normalList} // 自定义无需校验关键词\n    readOnly={false} // 是否只读\n    lineNumber={true} // 是否显示列数\n    onChange={getCode} // 回调\n/>\n```\n\n## fieldList 输入@符号才能调起\n```\nfieldList: [\n    { name: "放款金额", value: "fkje"},\n    { name: "实际放款金额", value: "sjfkje"},\n    { name: "借款人姓名", value: "jkrxm"},\n    { name: "借款人手机号", value: "jkrsjh"},\n    { name: "借款人身份证", value: "jkrsfz"},\n],\n```\n## methodList 输入#符号才能调起\n```\nmethodList: [\n    { name: "平均值", value: "平均值(,)", realValue: "avg" },\n    { name: "最大值", value: "最大值(,)", realValue: "max" },\n    { name: "最小值", value: "最小值(,)", realValue: "min" },\n    { name: "求和", value: "求和(,)", realValue: "sum" }\n],\n```\n## normalList 自定义无需校验关键词\n```\nnormalList: [\n    { name: "且", value: "and" },\n    { name: "或", value: "or" }\n],\n```\n\n## 编辑器效果\n![day主题](https://github.com/bruceliu68/formulaEdit-react/raw/master/src/img/pic1.png "day主题")\n\n![night主题](https://github.com/bruceliu68/formulaEdit-react/raw/master/src/img/pic2.png "night主题")\n\n## props参数：\n|    参数    | 类型    |  默认值   |  是否必填  | 说明         |\n| :------:  | :-----: | :----:   | :------: | :----------: |\n| defaultValue | string  |  无      |   非必填    | 初始化赋值     |\n| height    | number  |  300     |   非必填  | 高度设置       |\n| theme    | string  |  day     |   非必填  | 主题: 目前只支持两种：day，night |\n| readOnly  | boolean |  false   |   非必填  | 设置只读       |\n| lineNumber  | boolean |  false   |   非必填  | 设置行号       |\n| fieldList | array   |  无      |   非必填  | 字段列表       |\n| methodList | array   |  无      |   非必填  | 方法列表       |\n| normalList | array   |  无      |   非必填  | 自定义关键词列表       |\n| onChange  | function(code, obj)|  无      |   非必填    | 返回code, obj      |\n\n## License\nMIT'}))}}]),e}(h.PureComponent),L=[{name:"计算公式编辑器",url:"formulaEditor",component:k},{name:"Groovy编辑器",url:"groovyEditor",component:function(n){function e(){return r()(this,e),l()(this,c()(e).apply(this,arguments))}return d()(e,n),o()(e,[{key:"render",value:function(){return p.a.createElement("div",{className:"m-main"},p.a.createElement(g.a,{source:'# groovy-edit-react\n\n> groovy语法编辑器\n\n- 支持groovy和Java语法智能提示，并支持自定义语法提示\n- 支持主题切换\n- 支持代码折叠、行数显示、只读模式\n- 支持代码高亮\n\n## Usage\n\n### groovy-edit-react\n\n安装\n\n```sh\nnpm install --save-dev groovy-edit-react\n```\n使用\n\n```\n<GroovyEditor\n    defaultCode={defaultCode}\n    readOnly={true}\n    height={300}\n    theme="night"\n    activeLine={true}\n    fold={true}\n    keywords=["const", "var"]\n    onChange={(code) => this.getCode(code)}\n/>\n```\n\n## keywords 自定义关键词\n```\nkeywords: ["const", "var"]\n```\n\n## 编辑器效果\n![主题](https://github.com/bruceliu68/GroovyEditor/raw/master/src/img/pic.png "主题")\n\n## props参数：\n|    参数    | 类型    |  默认值   |  是否必填  | 说明         |\n| :------:  | :-----: | :----:   | :------: | :----------: |\n| defaultCode | string |  ""     |   非必填    | 初始化赋值     |\n| code | string |  ""     |   非必填    |      |\n| readOnly  | boolean |  false   |   非必填  | 设置只读       |\n| height | number   |  300     |   非必填  | 编辑器高度       |\n| theme  | string   |  "day"     |   非必填  | 主题："day"和"night" |\n| activeLine   | boolean   |  true     |   非必填  | 当前行选中标识  |\n| fold   | boolean   |  true     |   非必填  | 代码折叠  |\n| keywords   | array   |  []     |   非必填  | 自定义提示关键词  |\n| onChange  | function|  无      |   非必填  | 返回code       |\n\n## License\nMIT'}))}}]),e}(h.PureComponent)}],E=function(n){function e(){return r()(this,e),l()(this,c()(e).apply(this,arguments))}return d()(e,n),o()(e,[{key:"render",value:function(){var n=this.props,e=n.history,a=n.match.params.name;return p.a.createElement(p.a.Fragment,null,p.a.createElement(y,{history:e,menuList:L,name:a}),"index"===a&&p.a.createElement(b,null),L.map(function(n,e){var t;return n.url===a&&(t=p.a.createElement(n.component,null)),t}))}}]),e}(h.PureComponent);e.default=E}}]);